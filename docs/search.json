[{"path":"https://github.com/fasrc/CRE/articles/CRE.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"CRE","text":"Installing latest developing version. Installing CRAN.","code":"library(devtools) install_github(\"NSAPH-Software/CRE\", ref=\"develop\") library(\"CRE\") install.packages(\"CRE\")"},{"path":"https://github.com/fasrc/CRE/articles/CRE.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"CRE","text":"Input parameters: y observed response (outcome) vector.z treatment (exposure, policy) vector.X covariate matrix.method_params Parameters estimating individual treatment effect, including:Parameters Discovery - ratio_dis ratio data delegated discovery sub-sample. - ite_method_dis method estimate discovery sub-sample estimating individual treatment effect (ITE). - include_ps_dis Whether include propensity score estimate covariate discovery ITE estimation, considered BART, CF. - ps_method_dis estimation model propensity score discovery sub-sample. - or_method_dis estimation model outcome regressions estimate_ite_aipw discovery sub-sample.Parameters Inference - ite_method_inf method estimate inference sample ITE. - include_ps_inf Whether include propensity score estimate covariate inference ITE estimation, considered BART, CF. - ps_method_inf estimation model propensity score inference subsample. - or_method_inf estimation model outcome regressions estimate_ite_aipw inference subsample.Parameters - include_offset Whether include offset estimating ITE, Poisson . - offset_name name offset, included. - cate_method method estimate conditional average treatment effect (CATE) values. - cate_SL_library library used cate_method set DRLearner. - filter_cate Whether filter rules p-value <= 0.05.hyper_params list parameters required tune functions, including: - effect_modifiers Effect Modifiers Rules Generation. - ntrees_rf number decision trees randomForest. - ntrees_gbm number decision trees gradient boosting. - node_size minimum size trees’ terminal nodes. - max_nodes maximum number terminal nodes trees forest can . - max_depth number top levels tree considered extract conditions. - replace Boolean variable replacement bootstrapping. - max_decay Decay Threshold pruning rules. - type_decay Decay Type pruning rules (1: relative error; 2: error). - t_anom threshold define generic specific (anomalous) rules. - t_corr threshold define correlated rules. - q Number (unique) selected rules per subsample stability selection. - stability_selection Whether using stability selection selecting causal rules. - pfer_val Per-Family Error Rate, expected number false discoveries.","code":""},{"path":"https://github.com/fasrc/CRE/articles/CRE.html","id":"a-note-on-the-parameters","dir":"Articles","previous_headings":"Usage","what":"A note on the parameters","title":"CRE","text":"(1) Options ITE estimation follows: Inverse Propensity Weighting (ipw) Stabilized Inverse Propensity Weighting (sipw) Augmented Inverse Propensity Weighting (aipw) Outcome Regression (oreg) Bayesian Additive Regression Trees (bart) Bayesian Causal Forests (bcf) Causal Forests (cf) Poisson Regression (poisson) (2) include_ps_dis include_ps_inf arguments considered ITE method selected bart, cf. CRE package can generate synthetic data can used test different features package. current implementation, code can generate data continuous binary outcomes.","code":"set.seed(9687)   dataset_cont <- generate_cre_dataset(n = 300, rho = 0, n_rules = 2, p = 10,                                        effect_size = 2, binary = FALSE)   y <- dataset_cont[[\"y\"]]   z <- dataset_cont[[\"z\"]]   X <- as.data.frame(dataset_cont[[\"X\"]])   X_names <- names(as.data.frame(X))    method_params = list(ratio_dis = 0.25,                        ite_method_dis=\"bart\",                        ps_method_dis = \"SL.xgboost\",                        oreg_method_dis = \"SL.xgboost\",                        include_ps_dis = TRUE,                        ite_method_inf = \"bart\",                        ps_method_inf = \"SL.xgboost\",                        oreg_method_inf = \"SL.xgboost\",                        include_ps_inf = TRUE,                        include_offset = FALSE,                        cate_method = \"DRLearner\",                        cate_SL_library = \"SL.xgboost\",                        filter_cate = FALSE,                        offset_name = NA,                        random_state = 3591)   hyper_params = list(ntrees_rf = 100,                      ntrees_gbm = 50,                      node_size = 20,                      max_nodes = 5,                      max_depth = 15,                      max_decay = 0.025,                      type_decay = 2,                      t_anom = 0.025,                      t_corr = 1,                      replace = FALSE,                      q = 0.8,                      stability_selection = TRUE,                      pfer_val = 0.1)  cre_results <- cre(y, z, X, method_params, hyper_params)"},{"path":"https://github.com/fasrc/CRE/articles/Contribution.html","id":"environment-setup","dir":"Articles","previous_headings":"","what":"Environment Setup","title":"Contribution","text":"Please follow steps get copy CRE Github account. Navigate CRE Github repository, top right corner, click Fork button. add clone project Github account. Open terminal (Gitbash Windows, Anaconda prompt, …) run following command (brackets included): already SSH key, need generate one. Read . Now, can modify codebase track modification. good idea create new branch work codebase. Read following instructions git branching.","code":"git clone git@github.com:[your user name]/CRE.git"},{"path":"https://github.com/fasrc/CRE/articles/Contribution.html","id":"git-branching-model","dir":"Articles","previous_headings":"","what":"Git Branching Model","title":"Contribution","text":"Although, personal repository, can pick branch name, however, order keep consistency also understand working , following convention strongly recommended. project, follow convention proposed Vincent Driessen successful Git branching model post.","code":""},{"path":"https://github.com/fasrc/CRE/articles/Contribution.html","id":"where-to-submit-pull-requests","dir":"Articles","previous_headings":"","what":"Where to submit pull requests?","title":"Contribution","text":"pull requests submitted base repository: fasrc/CRE base: develop branch.","code":""},{"path":"https://github.com/fasrc/CRE/articles/Contribution.html","id":"pull-request-checklist","dir":"Articles","previous_headings":"","what":"Pull request checklist","title":"Contribution","text":"Please run devtools::document(), devtools::load_all() final modifications. Make sure modified code passes checks tests (can run devtools::check() RStudio) PR pass CI reviews can merge . Add line(s) modification NEWS.md file. adding new features, please make sure appropriate documentation added updated. Please clean white spaces. Read .","code":""},{"path":"https://github.com/fasrc/CRE/articles/Contribution.html","id":"reporting-bugs","dir":"Articles","previous_headings":"","what":"Reporting bugs","title":"Contribution","text":"Please report potential bugs creating new issue sending us email. Please include following information bug report: brief description , expected happen, happened. OS using whether using personal computer HPC cluster. version package installed.","code":""},{"path":"https://github.com/fasrc/CRE/articles/Contribution.html","id":"style-guide","dir":"Articles","previous_headings":"","what":"Style Guide","title":"Contribution","text":"project, follow tidyverse style guide.","code":""},{"path":[]},{"path":"https://github.com/fasrc/CRE/articles/Contribution.html","id":"names","dir":"Articles","previous_headings":"Style Guide > Summary","what":"Names","title":"Contribution","text":"File names snake_case ends .R (e.g., create_matching.R) variable names small letter separate _ need (e.g., delta_n) Function names follow snake_case style (e.g., generate_data) Function names follow verb+output convention (e.g., compute_resid)","code":""},{"path":"https://github.com/fasrc/CRE/articles/Contribution.html","id":"spaces-and-indentation","dir":"Articles","previous_headings":"Style Guide > Summary","what":"Spaces and Indentation","title":"Contribution","text":"Indentations two spaces (use tab) Place space around binary operators (e.g., x + y) Place space comma Place space # commenting avoid multiple ### put space opening closing parenthesis Place space () used , , .","code":"#Acceptable: z <- x + y #Not recommended: z<-x+y # (no space) z<- x+y z<-x +y #Acceptable: a <- matrix(c(1:100), nrow = 5) #Not recommended: a <- matrix(c(1:100),nrow = 5) # (no space after comma) a <- matrix( c(1:100), nrow = 5 ) # (extra space after and before parentheses) a<-matrix(c(1:100), nrow = 5) # (no space around unary operator <- ) #Acceptable: # This is a comment #Not recommended: #This is a comment #    This is a comment (more than one space after #) ## This is a comment (multiple #) ###    This is a comment (multiple # and more than one space) #Acceptable: x <- (z + y) #Not recommended: x <- ( z + y ) # (unnecessary space) x <- (z + y ) x <- ( z + y) #Acceptible if (x > 2) {   print(x) } # Not recommended if(x > 2){   print(x) }"},{"path":"https://github.com/fasrc/CRE/articles/Contribution.html","id":"other-notes","dir":"Articles","previous_headings":"Style Guide > Summary","what":"Other notes","title":"Contribution","text":"Maximum line length 80 character Use explicit returns Use explicit tags documentation (e.g., @title, @description, …)","code":""},{"path":"https://github.com/fasrc/CRE/articles/Testing-the-Package.html","id":"getting-the-code","dir":"Articles","previous_headings":"","what":"Getting the code","title":"Testing the CRE Package","text":"test package, please install package system (R (>= 3.5.0)). can install package following one approaches: Directly GitHub CRAN (recommended) Source Forked Repository (recommended)","code":""},{"path":"https://github.com/fasrc/CRE/articles/Testing-the-Package.html","id":"installing-the-package-directly-from-github","dir":"Articles","previous_headings":"Getting the code","what":"Installing the package directly from Github","title":"Testing the CRE Package","text":"project, follow successful Git Branching Model. result, develop branch updated branch developers. Use devtools::install_github install package. specify ref, install master (main) branch. Try ?CRE. open package description page help tab (assuming using RStudio).","code":"library(devtools) try(detach(\"package:CRE\", unload = TRUE), silent = TRUE) # if already you have the package, detach and unload it, to have a new install.  install_github(\"NSAPH-Software/CRE\", ref=\"develop\") library(CRE)"},{"path":"https://github.com/fasrc/CRE/articles/Testing-the-Package.html","id":"installing-the-package-from-cran","dir":"Articles","previous_headings":"Getting the code","what":"Installing the package from CRAN","title":"Testing the CRE Package","text":"Installing package CRAN developing purposes recommended. probably, version CRAN latest version. [Complete section submitting package CRAN]","code":""},{"path":"https://github.com/fasrc/CRE/articles/Testing-the-Package.html","id":"installing-the-package-from-the-source","dir":"Articles","previous_headings":"Getting the code","what":"Installing the package from the source","title":"Testing the CRE Package","text":"order install package source, need download source code computer install source. steps: Go package Github repository drop-menu change branch develop. click Code tab click Download Zip tab. Open one files using RStudio, change project directory project directory (Session > Set Working Directory > Project Directory). Load devtools library load CRE.","code":"library(devtools) load_all() ?CRE"},{"path":"https://github.com/fasrc/CRE/articles/Testing-the-Package.html","id":"forking-the-package","dir":"Articles","previous_headings":"Getting the code","what":"Forking the package","title":"Testing the CRE Package","text":"Forking package Github account best option planning installing, testing, modifying, contributing project. Go package Github repository click Fork button top right corner. forking package, Open terminal (Gitbash Windows, Anaconda prompt, …) run following command (brackets included): Now, can modify codebase track modification. Navigate package folder Install package following Installing package source steps. good idea create new branch work codebase. Read successful Git Branching Model branching convention.","code":"git clone git@github.com:[your user name]/CRE.git"},{"path":"https://github.com/fasrc/CRE/articles/Testing-the-Package.html","id":"testing-the-package","dir":"Articles","previous_headings":"","what":"Testing the Package","title":"Testing the CRE Package","text":"Run following command test package.","code":"library(CRE)  # Generate sample data set.seed(1358) dataset_cont <- generate_cre_dataset(n = 1000, rho = 0, n_rules = 2, p = 10,                                      effect_size = 2, binary = FALSE) y <- dataset_cont[[\"y\"]] z <- dataset_cont[[\"z\"]] X <- as.data.frame(dataset_cont[[\"X\"]]) X_names <- names(as.data.frame(X))   # Run parameters method_params_1 <- list(ratio_dis = 0.25,                        rules_method = NA,                        include_offset = FALSE,                        offset_name = NA,                        filter_cate = FALSE,                        ite_method_dis = \"poisson\",                        include_ps_dis = NA,                         ps_method_dis = \"SL.xgboost\",                        ite_method_inf = \"poisson\",                        include_ps_inf = NA,                         ps_method_inf = \"SL.xgboost\",                        oreg_method_inf = NA,                         cate_method = \"poisson\",                         cate_SL_library = NA)  hyper_params_1 <- list(ntrees_rf = 100,                        ntrees_gbm = 50,                        min_nodes = 20,                        max_nodes = 5,                        t = 0.025,                        q = 0.8)  # Poisson CATE estimation with Poisson ITE estimation print(\"Testing Poisson CATE estimation with Poisson ITE estimation\") cre_results_1 <- cre(y = abs(y), z, X, method_params_1, hyper_params_1)  cre_results_1[[\"CATE_results\"]][,1] cre_results_1[[\"CATE_results\"]][,1] # DRLearner CATE estimation with AIPW ITE estimation  method_params_2 <- list(ratio_dis = 0.25,                         rules_method = NA,                         include_offset = FALSE,                         offset_name = NA,                         filter_cate = FALSE,                         ite_method_dis = \"aipw\",                         include_ps_dis = NA,                          ps_method_dis = \"SL.xgboost\",                         oreg_method_dis = \"SL.xgboost\",                         ite_method_inf = \"aipw\",                         include_ps_inf = NA,                          ps_method_inf = \"SL.xgboost\",                         oreg_method_inf = \"SL.xgboost\",                          cate_method = \"DRLearner\",                          cate_SL_library =\"SL.xgboost\")  hyper_params_2 <- list(ntrees_rf = 100,                        ntrees_gbm = 50,                        min_nodes = 20,                        max_nodes = 5,                        t = 0.025,                        q = 0.8)  print(\"Testing DRLearner CATE estimation with AIPW ITE estimation\") cre_results_2 <- cre(y, z, X, method_params_2, hyper_params_2)  cre_results_2[[\"CATE_results\"]][,1] cre_results_2[[\"CATE_results\"]][,1] # CF-means CATE estimation with BCF ITE estimation print(\"Testing CF-means CATE estimation with BCF ITE estimation\") cre_results_3 <- cre(y, z, X, ratio_dis, ite_method_dis = \"bcf\",                      include_ps_dis = NA, ps_method_dis = \"SL.xgboost\",                      or_method_dis = NA, ite_method_inf = \"bcf\",                      include_ps_inf = NA, ps_method_inf = \"SL.xgboost\",                      or_method_inf = NA, ntrees_rf, ntrees_gbm, min_nodes,                      max_nodes, t, q, rules_method, include_offset, offset_name,                      cate_method = \"cf-means\", cate_SL_library = NA)  cre_results_3[[\"CATE_results\"]][,1] cre_results_3[[\"CATE_results\"]][,1] plot(cre_results_3) cre_results_4 <- cre(y, z, X, ratio_dis, ite_method_dis = \"bart\",                      include_ps_dis = TRUE, ps_method_dis = \"SL.xgboost\",                      or_method_dis = NA, ite_method_inf = \"bart\",                      include_ps_inf = TRUE, ps_method_inf = \"SL.xgboost\",                      or_method_inf = NA, ntrees_rf, ntrees_gbm, min_nodes,                      max_nodes, t, q, rules_method, include_offset,                      offset_name, cate_method = \"linreg\", cate_SL_library = NA)  cre_results_4[[\"CATE_results\"]][,1] cre_results_4[[\"CATE_results\"]][,1]"},{"path":"https://github.com/fasrc/CRE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Naeem Khoshnevis. Author, maintainer.            FASRC Daniela Maria Garcia. Author. Riccardo Cadei. Author. Kwonsang Lee. Author. Falco Joannes Bargagli Stoffi. Author.","code":""},{"path":"https://github.com/fasrc/CRE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Khoshnevis N, Garcia D, Cadei R, Lee K, Bargagli Stoffi F (2022). CRE: Interpretable Subgroups Identification Ensemble Learning Causal Rules. R package version 0.1.1.9000, https://github.com/NSAPH-Software/CRE.","code":"@Manual{,   title = {CRE: Interpretable Subgroups Identification Through Ensemble Learning of Causal Rules},   author = {Naeem Khoshnevis and Daniela Maria Garcia and Riccardo Cadei and Kwonsang Lee and Falco Joannes {Bargagli Stoffi}},   year = {2022},   note = {R package version 0.1.1.9000},   url = {https://github.com/NSAPH-Software/CRE}, }"},{"path":[]},{"path":"https://github.com/fasrc/CRE/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Interpretable Subgroups Identification through Ensemble Learning of Causal Rules","text":"Causal subgroup identification powerful statistical tool determining vulnerabilities population respect particular treatment. causal machine learning provides efficient accurate tool data-driven subgroup identification, software packages proving essential means easily disseminate reproduce algorithms broadly. CRE Package, written R available GitHub, implements recently developed Causal Rule Ensemble (CRE) algorithm, flexible precise method denovo subgroup discovery. CRE approach focuses identifying drivers treatment heterogeneity observational randomized studies presence intervention treatment.","code":""},{"path":"https://github.com/fasrc/CRE/index.html","id":"package-details","dir":"","previous_headings":"","what":"Package Details","title":"Interpretable Subgroups Identification through Ensemble Learning of Causal Rules","text":"Package centered one R function, cre(), conducts entirety CRE algorithm given dataset series input parameters user. cre() function calls number helper functions conduct discovery inference subsample analysis. example, estimation Individual Treatment Effects, users can select particular method large list methodologies, vary respect speed precision. parameter selections determine helper functions cre() calls. CRE method splits inputted data discovery inference subsamples. discovery subsample, generates filters causal rules explain heterogeneity treatment effects. applies rules inference subsample estimates Conditional Average Treatment Effect (CATE) subgroup. final output cre() list selected causal rules identify subgroups higher heterogeneity effects matrix estimated CATEs rule, highly accessible interpretable. Note: sensitivity analysis unmeasured confounding also implemented later version.","code":""},{"path":"https://github.com/fasrc/CRE/index.html","id":"applications","dir":"","previous_headings":"","what":"Applications","title":"Interpretable Subgroups Identification through Ensemble Learning of Causal Rules","text":"package, user can apply method variety new datasets. applications CRE method R package vast, notable potential impact field public health. intend apply method dataset linking air pollution (PM2.5) data Medicare mortality data across United States. empirical goal identify vulnerable communities, inform policymakers mitigate negative health economic effects subgroups reduce inequality.","code":""},{"path":"https://github.com/fasrc/CRE/reference/CRE-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'CRE' package. — CRE-package","title":"The 'CRE' package. — CRE-package","text":"Provides interpretable identification subgroups heterogeneous causal effect. heterogeneous subgroups discovered ensemble learning causal rules. Causal rules highly interpretable -statement recursively partition features space heterogeneous subgroups. small number significant causal rules selected Stability Selection control family-wise error rate finite sample setting. proposes various estimation methods conditional causal effects discovered causal rule.  highly flexible multiple causal estimands imputation methods implemented.","code":""},{"path":"https://github.com/fasrc/CRE/reference/CRE-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'CRE' package. — CRE-package","text":"Lee, K., Bargagli-Stoffi, F. J., & Dominici, F. (2020). Causal rule ensemble: Interpretable inference heterogeneous treatment effects.  arXiv preprint arXiv:2009.09036.","code":""},{"path":"https://github.com/fasrc/CRE/reference/CRE-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The 'CRE' package. — CRE-package","text":"Naeem Khoshnevis Daniela Maria Garcia Riccardo Cadei Kwonsang Lee Falco Joannes Bargagli Stoffi","code":""},{"path":"https://github.com/fasrc/CRE/reference/analyze_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity Analysis — analyze_sensitivity","title":"Sensitivity Analysis — analyze_sensitivity","text":"Method analyzing sensitivity estimates causal rule-specific treatment effects","code":""},{"path":"https://github.com/fasrc/CRE/reference/analyze_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity Analysis — analyze_sensitivity","text":"","code":"analyze_sensitivity(ite_std, rules_matrix_std)"},{"path":"https://github.com/fasrc/CRE/reference/analyze_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity Analysis — analyze_sensitivity","text":"ite_std standardized ITE rules_matrix_std standardized causal rules matrix","code":""},{"path":"https://github.com/fasrc/CRE/reference/analyze_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity Analysis — analyze_sensitivity","text":"list containing results sensitivity analysis","code":""},{"path":"https://github.com/fasrc/CRE/reference/autoplot.cre.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for CRE object — autoplot.cre","title":"A helper function for CRE object — autoplot.cre","text":"helper function plot CRE object using ggplot2 package.","code":""},{"path":"https://github.com/fasrc/CRE/reference/autoplot.cre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for CRE object — autoplot.cre","text":"","code":"# S3 method for cre autoplot(object, ...)"},{"path":"https://github.com/fasrc/CRE/reference/autoplot.cre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for CRE object — autoplot.cre","text":"object CRE object. ... Additional arguments passed customize plot.","code":""},{"path":"https://github.com/fasrc/CRE/reference/autoplot.cre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for CRE object — autoplot.cre","text":"Returns ggplot object.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_hyper_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input parameters — check_hyper_params","title":"Check input parameters — check_hyper_params","text":"Checks input parameters cre function.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_hyper_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input parameters — check_hyper_params","text":"","code":"check_hyper_params(params)"},{"path":"https://github.com/fasrc/CRE/reference/check_hyper_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input parameters — check_hyper_params","text":"params list parameters required run function.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_hyper_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input parameters — check_hyper_params","text":"return value. function called side effects.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input parameters — check_input","title":"Check input parameters — check_input","text":"Checks input parameters cre function.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input parameters — check_input","text":"","code":"check_input(y, z, X, params)"},{"path":"https://github.com/fasrc/CRE/reference/check_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input parameters — check_input","text":"y observed response vector. z treatment vector. X covariate matrix. params list parameters required run function.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input parameters — check_input","text":"list params might changed checks.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Input Data — check_input_data","title":"Check Input Data — check_input_data","text":"Conducts sanity checks input data","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Input Data — check_input_data","text":"","code":"check_input_data(y, z, X)"},{"path":"https://github.com/fasrc/CRE/reference/check_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Input Data — check_input_data","text":"y observed response vector. z treatment vector. X features matrix.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_input_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Input Data — check_input_data","text":"Number data samples.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_method_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Check method-related parameters — check_method_params","title":"Check method-related parameters — check_method_params","text":"Checks method-related parameters.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_method_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check method-related parameters — check_method_params","text":"","code":"check_method_params(y, params)"},{"path":"https://github.com/fasrc/CRE/reference/check_method_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check method-related parameters — check_method_params","text":"y observed response vector. params list parameters required run method functions.","code":""},{"path":"https://github.com/fasrc/CRE/reference/check_method_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check method-related parameters — check_method_params","text":"modified input params. list parameters might changed checks.","code":""},{"path":"https://github.com/fasrc/CRE/reference/cre.html","id":null,"dir":"Reference","previous_headings":"","what":"The Causal Rule Ensemble — cre","title":"The Causal Rule Ensemble — cre","text":"Performs Causal Rule Ensemble data set response variable, treatment variable, various features","code":""},{"path":"https://github.com/fasrc/CRE/reference/cre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Causal Rule Ensemble — cre","text":"","code":"cre(y, z, X, method_params, hyper_params)"},{"path":"https://github.com/fasrc/CRE/reference/cre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Causal Rule Ensemble — cre","text":"y observed response vector. z treatment vector. X covariate matrix. method_params Parameters individual treatment effect, includig: Parameters Discovery ratio_dis: ratio data delegated discovery sub-sample. ite_method_dis: method estimate discovery sample ITE. include_ps_dis: Whether include propensity score estimate covariate discovery ITE estimation, considered BART, CF. ps_method_dis: estimation model propensity score discovery subsample. or_method_dis: estimation model outcome regressions estimate_ite_aipw discovery subsample. Parameters Inference ite_method_inf: method estimate inference sample ITE. include_ps_inf: Whether include propensity score estimate covariate inference ITE estimation, considered BART, CF. ps_method_inf: estimation model propensity score inference subsample. or_method_inf: estimation model outcome regressions estimate_ite_aipw inference subsample. Parameters include_offset: Whether include offset estimating ITE, Poisson . offset_name: name offset, included. cate_method: method estimate CATE values. cate_SL_library: library used cate_method set DRLearner. filter_cate: Whether filter rules p-value <= 0.05. hyper_params list parameters required tune functions, including: effect_modifiers: Effect Modifiers Rules Generation. ntrees_rf: number decision trees randomForest. ntrees_gbm: number decision trees gradient boosting. node_size: minimum size trees' terminal nodes. max_nodes: maximum number terminal nodes trees forest can . max_depth: number top levels tree considered extract conditions. replace: Boolean variable replacement bootstrapping. max_decay: Decay Threshold pruning rules. type_decay: Decay Type pruning rules (1: relative error; 2: error). t_anom: threshold define generic specific (anomalous) rules. t_corr: threshold define correlated rules. q: Number (unique) selected rules per subsample stability selection. stability_selection: Whether using stability selection selecting causal rules. pfer_val: Per-Family Error Rate, expected number false discoveries.","code":""},{"path":"https://github.com/fasrc/CRE/reference/cre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Causal Rule Ensemble — cre","text":"S3 object containing matrix Conditional Average Treatment Effect estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/cre.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Causal Rule Ensemble — cre","text":"","code":"# \\donttest{ set.seed(2021) dataset_cont <- generate_cre_dataset(n = 300, rho = 0, n_rules = 2, p = 10,                                      effect_size = 2, binary = FALSE) y <- dataset_cont[[\"y\"]] z <- dataset_cont[[\"z\"]] X <- as.data.frame(dataset_cont[[\"X\"]]) X_names <- names(as.data.frame(X))  method_params <- list(ratio_dis = 0.25,                       ite_method_dis=\"bart\",                       ps_method_dis = \"SL.xgboost\",                       oreg_method_dis = \"SL.xgboost\",                       include_ps_dis = TRUE,                       ite_method_inf = \"bart\",                       ps_method_inf = \"SL.xgboost\",                       oreg_method_inf = \"SL.xgboost\",                       include_ps_inf = TRUE,                       include_offset = FALSE,                       cate_method = \"DRLearner\",                       cate_SL_library = \"SL.xgboost\",                       filter_cate = FALSE,                       offset_name = NA,                       random_state = 3591)  hyper_params <- list(ntrees_rf = 100,                      ntrees_gbm = 50,                      node_size = 20,                      max_nodes = 5,                      max_depth = 15,                      max_decay = 0.025,                      type_decay = 2,                      t_anom = 0.025,                      t_corr = 1,                      replace = FALSE,                      q = 0.8,                      stability_selection = TRUE,                      pfer_val = 0.1)  cre_results <- cre(y, z, X, method_params, hyper_params) #> Loading required package: nnls #> fitting treatment model via method 'bart' #> fitting response model via method 'bart' #> Registered S3 method overwritten by 'randomForest': #>   method      from #>   plot.margin RRF  #> 393 rules (length<=15) were extracted from the first 100 trees. #> 100 rules (length<=15) were extracted from the first 50 trees. #> Conducting Inference Subsample Analysis #> fitting treatment model via method 'bart' #> fitting response model via method 'bart' # }"},{"path":"https://github.com/fasrc/CRE/reference/cre_crossfit.html","id":null,"dir":"Reference","previous_headings":"","what":"The Causal Rule Ensemble Crossfit — cre_crossfit","title":"The Causal Rule Ensemble Crossfit — cre_crossfit","text":"Performs Causal Rule Ensemble twice dataset response variable, treatment variable, various features, swapping discovery inference subsamples.","code":""},{"path":"https://github.com/fasrc/CRE/reference/cre_crossfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Causal Rule Ensemble Crossfit — cre_crossfit","text":"","code":"cre_crossfit(   y,   z,   X,   ite_method_dis,   include_ps_dis = NA,   ps_method_dis = \"SL.xgboost\",   or_method_dis = NA,   ite_method_inf,   include_ps_inf = NA,   ps_method_inf = \"SL.xgboost\",   or_method_inf = NA,   ntrees_rf,   ntrees_gbm,   min_nodes,   max_nodes,   t,   q,   rules_method = NA,   include_offset = FALSE,   offset_name = NA,   cate_method = \"DRLearner\",   cate_SL_library = \"SL.xgboost\",   filter_cate = FALSE )"},{"path":"https://github.com/fasrc/CRE/reference/cre_crossfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Causal Rule Ensemble Crossfit — cre_crossfit","text":"y observed response vector z treatment vector X covariate matrix ite_method_dis method estimate discovery sample ITE include_ps_dis whether include propensity score estimate covariate discovery ITE estimation, considered BART, XBART, CF ps_method_dis estimation model propensity score discovery subsample or_method_dis estimation model outcome regressions estimate_ite_aipw discovery subsample ite_method_inf method estimate inference sample ITE include_ps_inf whether include propensity score estimate covariate inference ITE estimation, considered BART, XBART, CF ps_method_inf estimation model propensity score inference subsample or_method_inf estimation model outcome regressions estimate_ite_aipw inference subsample ntrees_rf number decision trees randomForest ntrees_gbm number decision trees gradient boosting min_nodes minimum size trees' terminal nodes max_nodes maximum size trees' terminal nodes t common support used generating causal rules matrix q selection threshold used selecting causal rules rules_method method selecting causal rules binary outcomes include_offset whether include offset estimating ITE, poisson offset_name name offset, included cate_method method estimate CATE values cate_SL_library library used cate_method set DRLearner filter_cate whether filter rules p-value <= 0.05","code":""},{"path":"https://github.com/fasrc/CRE/reference/cre_crossfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Causal Rule Ensemble Crossfit — cre_crossfit","text":"S3 object containing matrix averaged Conditional Average Treatment Effect estimates two CRE iterations","code":""},{"path":"https://github.com/fasrc/CRE/reference/cre_crossfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Causal Rule Ensemble Crossfit — cre_crossfit","text":"","code":"dataset <- generate_cre_dataset(n = 1000, rho = 0, n_rules = 2, p = 10,                                 effect_size = 2, binary = FALSE)  cre_cross_results <- cre_crossfit(y = dataset[[\"y\"]], z = dataset[[\"z\"]],                                   X = as.data.frame(dataset[[\"X\"]]),                                   ite_method_dis = \"bart\",                                   include_ps_dis = TRUE,                                   ite_method_inf = \"bart\",                                   include_ps_inf = TRUE,                                   ntrees_rf = 100, ntrees_gbm = 50,                                   min_nodes = 20, max_nodes = 5,                                   t = 0.025, q = 0.8) #> fitting treatment model via method 'bart' #> fitting response model via method 'bart' #> fitting treatment model via method 'bart' #> fitting response model via method 'bart' #> Conducting Discovery Subsample Analysis 1 #> 411 rules (length<=15) were extracted from the first 100 trees. #> 150 rules (length<=15) were extracted from the first 50 trees. #> Conducting Inference Subsample Analysis 1 #> Conducting Discovery Subsample Analysis 2 #> 493 rules (length<=15) were extracted from the first 100 trees. #> 100 rules (length<=15) were extracted from the first 50 trees. #> Conducting Inference Subsample Analysis 2"},{"path":"https://github.com/fasrc/CRE/reference/discard_anomalous_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Discard Anomalous (Causal) Decision Rules — discard_anomalous_rules","title":"Discard Anomalous (Causal) Decision Rules — discard_anomalous_rules","text":"Discard rules many observations.","code":""},{"path":"https://github.com/fasrc/CRE/reference/discard_anomalous_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discard Anomalous (Causal) Decision Rules — discard_anomalous_rules","text":"","code":"discard_anomalous_rules(rules_matrix, rules_list, t)"},{"path":"https://github.com/fasrc/CRE/reference/discard_anomalous_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discard Anomalous (Causal) Decision Rules — discard_anomalous_rules","text":"rules_matrix causal rules matrix. rules_list list causal rules. t threshold define generic specific rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/discard_anomalous_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discard Anomalous (Causal) Decision Rules — discard_anomalous_rules","text":"list : filtered rules matrix filtered rules list","code":""},{"path":"https://github.com/fasrc/CRE/reference/discard_correlated_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Discard Correlated (Causal) Decision Rules — discard_correlated_rules","title":"Discard Correlated (Causal) Decision Rules — discard_correlated_rules","text":"Discard redundant correlated rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/discard_correlated_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discard Correlated (Causal) Decision Rules — discard_correlated_rules","text":"","code":"discard_correlated_rules(rules_matrix, rules_list, t)"},{"path":"https://github.com/fasrc/CRE/reference/discard_correlated_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discard Correlated (Causal) Decision Rules — discard_correlated_rules","text":"rules_matrix causal rules matrix. rules_list list causal rules. t threshold define correlated rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/discard_correlated_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discard Correlated (Causal) Decision Rules — discard_correlated_rules","text":"list : filtered rules matrix filtered rules list","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_cate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Conditional Average Treatment Effect — estimate_cate","title":"Estimate the Conditional Average Treatment Effect — estimate_cate","text":"Estimates Conditional Average Treatment Effect given standardized vector Individual Treatment Effects, standardized matrix causal rules, list causal rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_cate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Conditional Average Treatment Effect — estimate_cate","text":"","code":"estimate_cate(   y_inf,   z_inf,   X_inf,   X_names,   include_offset,   offset_name,   rules_matrix_inf,   select_rules_interpretable,   cate_method,   ite_inf,   sd_ite_inf,   cate_SL_library,   filter_cate )"},{"path":"https://github.com/fasrc/CRE/reference/estimate_cate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Conditional Average Treatment Effect — estimate_cate","text":"y_inf outcome vector inference subsample z_inf treatment vector inference subsample X_inf covariate vector inference subsample X_names names covariates include_offset whether include offset estimating ITE, poisson offset_name name offset, included rules_matrix_inf standardized causal rules matrix inference subsample select_rules_interpretable list select causal rules terms coviariate names cate_method method estimate CATE values ite_inf estimated ITEs inference subsample sd_ite_inf standard deviations estimated ITEs inference subsample cate_SL_library library used cate_method = DRLearner filter_cate whether filter rules p-value <= 0.05","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_cate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Conditional Average Treatment Effect — estimate_cate","text":"matrix CATE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect (ITE) — estimate_ite","title":"Estimate the Individual Treatment Effect (ITE) — estimate_ite","text":"Estimates Individual Treatment Effect given response vector, treatment vector, covariate matrix, desired algorithm.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect (ITE) — estimate_ite","text":"","code":"estimate_ite(y, z, X, ite_method, is_y_binary, ...)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect (ITE) — estimate_ite","text":"y observed response vector. z observed treatment vector. X covariate matrix. ite_method method estimating Individual Treatment Effect. methods requires additional parameters. parameters mentioned indented blocks method definitions provided end parameters list. ipw: Inverse Propensity Weighting ps_method sipw: Stabilized Inverse Propensity Weighting ps_method aipw: Augmented Inverse Propensity Weighting ps_method  oreg_method oreg: Outcome Regression bart: Bayesian Additive Regression Trees include_ps ps_method xbart: Accelerated Bayesian Additive Regression Trees include_ps ps_method bcf: Bayesian Causal Forest ps_method xbcf: Accelerated Bayesian Causal Forest ps_method cf: Causal Forest include_ps ps_method poisson: Poisson Estimation X_names, include_offset, offset_name is_y_binary whether outcome binary ... dditional parameters passed different models.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect (ITE) — estimate_ite","text":"list includes: raw ITE estimates standardized ITE estimates, standard deviations ITE estimates.","code":""},{"path":[]},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite.html","id":"additional-parameters","dir":"Reference","previous_headings":"","what":"Additional parameters","title":"Estimate the Individual Treatment Effect (ITE) — estimate_ite","text":"include_ps: Whether include propensity score estimate covariate ITE estimation. ps_method: Estimation method propensity score. include libraries SuperLearner package. oreg_method: estimation model outcome regressions. include libraries SuperLearner package. X_names: names covariates. (TODO: Remove input params.) include_offset: Whether include offset estimating ITE. offset_name: name offset.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_aipw.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Augmented Inverse Propensity\nWeighting — estimate_ite_aipw","title":"Estimate the Individual Treatment Effect using Augmented Inverse Propensity\nWeighting — estimate_ite_aipw","text":"Estimates Individual Treatment Effect using Augmented Inverse Propensity Weighting given response vector, treatment vector, features matrix, estimation model propensity score estimation model outcome regressions","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_aipw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Augmented Inverse Propensity\nWeighting — estimate_ite_aipw","text":"","code":"estimate_ite_aipw(   y,   z,   X,   ps_method = \"SL.xgboost\",   oreg_method = \"SL.xgboost\" )"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_aipw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Augmented Inverse Propensity\nWeighting — estimate_ite_aipw","text":"y observed response vector z treatment vector X features matrix ps_method estimation model propensity score oreg_method estimation model outcome regressions","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_aipw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Augmented Inverse Propensity\nWeighting — estimate_ite_aipw","text":"list ITE estimates standard deviations ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_bart.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Bayesian Additive Regression Trees — estimate_ite_bart","title":"Estimate the Individual Treatment Effect using Bayesian Additive Regression Trees — estimate_ite_bart","text":"Estimates Individual Treatment Effect using Bayesian Additive Regression Trees given response vector, treatment vector, features matrix.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Bayesian Additive Regression Trees — estimate_ite_bart","text":"","code":"estimate_ite_bart(y, z, X, include_ps, ps_method, random_state)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Bayesian Additive Regression Trees — estimate_ite_bart","text":"y observed response vector z treatment vector X features matrix include_ps whether include propensity score estimate covariate ITE estimation ps_method method estimation propensity score random_state integer value random state.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_bart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Bayesian Additive Regression Trees — estimate_ite_bart","text":"list ITE estimates standard deviations ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_bcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Bayesian Causal Forest — estimate_ite_bcf","title":"Estimate the Individual Treatment Effect using Bayesian Causal Forest — estimate_ite_bcf","text":"Estimates Individual Treatment Effect using Bayesian Causal Forest given response vector, treatment vector, features matrix.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_bcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Bayesian Causal Forest — estimate_ite_bcf","text":"","code":"estimate_ite_bcf(y, z, X, ps_method)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_bcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Bayesian Causal Forest — estimate_ite_bcf","text":"y observed response vector z treatment vector X features matrix ps_method method estimation propensity score","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_bcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Bayesian Causal Forest — estimate_ite_bcf","text":"list ITE estimates standard deviations ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_cf.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Causal Forest — estimate_ite_cf","title":"Estimate the Individual Treatment Effect using Causal Forest — estimate_ite_cf","text":"Estimates Individual Treatment Effect using Causal Forest given response vector, treatment vector, features matrix","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_cf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Causal Forest — estimate_ite_cf","text":"","code":"estimate_ite_cf(y, z, X, include_ps, ps_method)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_cf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Causal Forest — estimate_ite_cf","text":"y observed response vector z treatment vector X features matrix include_ps whether include propensity score estimate covariate ITE estimation ps_method method estimation propensity score","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_cf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Causal Forest — estimate_ite_cf","text":"list ITE estimates standard deviations ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_ipw.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Inverse Propensity Weighting — estimate_ite_ipw","title":"Estimate the Individual Treatment Effect using Inverse Propensity Weighting — estimate_ite_ipw","text":"Estimates Individual Treatment Effect (ITE) using Inverse Propensity Weighting (IPW) given response vector, treatment vector, features matrix.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_ipw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Inverse Propensity Weighting — estimate_ite_ipw","text":"","code":"estimate_ite_ipw(y, z, X, ps_method)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_ipw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Inverse Propensity Weighting — estimate_ite_ipw","text":"y observed response vector z treatment vector X features matrix ps_method estimation method propensity score","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_ipw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Inverse Propensity Weighting — estimate_ite_ipw","text":"vector ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_or.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_or","title":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_or","text":"Method estimating Individual Treatment Effect using Outcome Regression given response vector, treatment vector, features matrix","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_or","text":"","code":"estimate_ite_or(y, z, X)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_or","text":"y observed response vector z treatment vector X features matrix","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_or.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_or","text":"vector ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_or.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_or","text":"","code":"dataset <- generate_cre_dataset(n = 1000, rho = 0, n_rules = 2, p = 10,                                 effect_size = 2, binary = FALSE)  # Initialize parameters y <- dataset[[\"y\"]] z <- dataset[[\"z\"]] X <- as.data.frame(dataset[[\"X\"]])  ite_list <- estimate_ite_or(y, z, X) #> *****Into main of wbart #> *****Data: #> data:n,p,np: 388, 10, 612 #> y1,yn: -0.694294, 1.362455 #> x1,x[n*p]: 1.000000, 1.000000 #> xp1,xp[np*p]: 0.000000, 0.000000 #> *****Number of Trees: 200 #> *****Number of Cut Points: 1 ... 1 #> *****burn and ndpost: 100, 1000 #> *****Prior:beta,alpha,tau,nu,lambda: 2.000000,0.950000,0.118817,3.000000,0.250422 #> *****sigma: 1.133838 #> *****w (weights): 1.000000 ... 1.000000 #> *****Dirichlet:sparse,theta,omega,a,b,rho,augment: 0,0,1,0.5,1,10,0 #> *****nkeeptrain,nkeeptest,nkeeptestme,nkeeptreedraws: 1000,1000,1000,1000 #> *****printevery: 100 #> *****skiptr,skipte,skipteme,skiptreedraws: 1,1,1,1 #>  #> MCMC #> done 0 (out of 1100) #> done 100 (out of 1100) #> done 200 (out of 1100) #> done 300 (out of 1100) #> done 400 (out of 1100) #> done 500 (out of 1100) #> done 600 (out of 1100) #> done 700 (out of 1100) #> done 800 (out of 1100) #> done 900 (out of 1100) #> done 1000 (out of 1100) #> time: 6s #> check counts #> trcnt,tecnt,temecnt,treedrawscnt: 1000,1000,1000,1000 #> *****Into main of wbart #> *****Data: #> data:n,p,np: 612, 10, 388 #> y1,yn: -0.485955, 0.857738 #> x1,x[n*p]: 0.000000, 0.000000 #> xp1,xp[np*p]: 1.000000, 1.000000 #> *****Number of Trees: 200 #> *****Number of Cut Points: 1 ... 1 #> *****burn and ndpost: 100, 1000 #> *****Prior:beta,alpha,tau,nu,lambda: 2.000000,0.950000,0.139249,3.000000,0.168737 #> *****sigma: 0.930723 #> *****w (weights): 1.000000 ... 1.000000 #> *****Dirichlet:sparse,theta,omega,a,b,rho,augment: 0,0,1,0.5,1,10,0 #> *****nkeeptrain,nkeeptest,nkeeptestme,nkeeptreedraws: 1000,1000,1000,1000 #> *****printevery: 100 #> *****skiptr,skipte,skipteme,skiptreedraws: 1,1,1,1 #>  #> MCMC #> done 0 (out of 1100) #> done 100 (out of 1100) #> done 200 (out of 1100) #> done 300 (out of 1100) #> done 400 (out of 1100) #> done 500 (out of 1100) #> done 600 (out of 1100) #> done 700 (out of 1100) #> done 800 (out of 1100) #> done 900 (out of 1100) #> done 1000 (out of 1100) #> time: 6s #> check counts #> trcnt,tecnt,temecnt,treedrawscnt: 1000,1000,1000,1000"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_oreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_oreg","title":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_oreg","text":"Method estimating Individual Treatment Effect using Outcome Regression given response vector, treatment vector, features matrix.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_oreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_oreg","text":"","code":"estimate_ite_oreg(y, z, X)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_oreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_oreg","text":"y observed response vector z treatment vector X features matrix","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_oreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Outcome Regression — estimate_ite_oreg","text":"vector ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_poisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Poisson Regression — estimate_ite_poisson","title":"Estimate the Individual Treatment Effect using Poisson Regression — estimate_ite_poisson","text":"Estimates Individual Treatment Effect using Poisson Regression given response vector, treatment vector, features matrix.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_poisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Poisson Regression — estimate_ite_poisson","text":"","code":"estimate_ite_poisson(y, z, X, X_names, include_offset, offset_name)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_poisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Poisson Regression — estimate_ite_poisson","text":"y observed response vector z treatment vector X features matrix X_names names covariates include_offset whether include offset estimating ITE, poisson offset_name name offset, included","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_poisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Poisson Regression — estimate_ite_poisson","text":"vector ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_sipw.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Stabilized Inverse Propensity\nWeighting — estimate_ite_sipw","title":"Estimate the Individual Treatment Effect using Stabilized Inverse Propensity\nWeighting — estimate_ite_sipw","text":"Estimates Individual Treatment Effect using Stabilized Inverse Propensity Weighting given response vector, treatment vector, features matrix.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_sipw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Stabilized Inverse Propensity\nWeighting — estimate_ite_sipw","text":"","code":"estimate_ite_sipw(y, z, X, ps_method)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_sipw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Stabilized Inverse Propensity\nWeighting — estimate_ite_sipw","text":"y observed response vector z treatment vector X features matrix ps_method estimation method propensity score","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_sipw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Stabilized Inverse Propensity\nWeighting — estimate_ite_sipw","text":"vector ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_xbart.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Accelerated Bayesian Additive Regression Trees — estimate_ite_xbart","title":"Estimate the Individual Treatment Effect using Accelerated Bayesian Additive Regression Trees — estimate_ite_xbart","text":"Method estimating Individual Treatment Effect using Accelerated Bayesian Additive Regression Trees given response vector, treatment vector, features matrix","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_xbart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Accelerated Bayesian Additive Regression Trees — estimate_ite_xbart","text":"","code":"estimate_ite_xbart(y, z, X, include_ps, ps_method)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_xbart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Accelerated Bayesian Additive Regression Trees — estimate_ite_xbart","text":"y observed response vector z treatment vector X features matrix include_ps whether include propensity score estimate covariate ITE estimation ps_method estimation method propensity score","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_xbart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Accelerated Bayesian Additive Regression Trees — estimate_ite_xbart","text":"list ITE estimates standard deviations ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_xbcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Individual Treatment Effect using Accelerated Bayesian Causal Forest — estimate_ite_xbcf","title":"Estimate the Individual Treatment Effect using Accelerated Bayesian Causal Forest — estimate_ite_xbcf","text":"Method estimating Individual Treatment Effect using Accelerated Bayesian Causal Forest given response vector, treatment vector, features matrix","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_xbcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Individual Treatment Effect using Accelerated Bayesian Causal Forest — estimate_ite_xbcf","text":"","code":"estimate_ite_xbcf(y, z, X, ps_method)"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_xbcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Individual Treatment Effect using Accelerated Bayesian Causal Forest — estimate_ite_xbcf","text":"y observed response vector z treatment vector X features matrix ps_method estimation method propensity score","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ite_xbcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Individual Treatment Effect using Accelerated Bayesian Causal Forest — estimate_ite_xbcf","text":"list ITE estimates standard deviations ITE estimates","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ps.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Propensity Score — estimate_ps","title":"Estimate the Propensity Score — estimate_ps","text":"Method estimating Propensity Score given treatment vector features data.frame.","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Propensity Score — estimate_ps","text":"","code":"estimate_ps(z, X, ps_method = \"SL.xgboost\")"},{"path":"https://github.com/fasrc/CRE/reference/estimate_ps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Propensity Score — estimate_ps","text":"z treatment vector. X features data frame. ps_method estimation model propensity score (default: SL.xgboost).","code":""},{"path":"https://github.com/fasrc/CRE/reference/estimate_ps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Propensity Score — estimate_ps","text":"vector propensity score estimates.","code":""},{"path":"https://github.com/fasrc/CRE/reference/extract_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract (Causal) Decision Rules — extract_rules","title":"Extract (Causal) Decision Rules — extract_rules","text":"Method extracting causal rules Random Forest Gradient Boosting algorithms.","code":""},{"path":"https://github.com/fasrc/CRE/reference/extract_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract (Causal) Decision Rules — extract_rules","text":"","code":"extract_rules(treelist, X, ntrees, max_depth)"},{"path":"https://github.com/fasrc/CRE/reference/extract_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract (Causal) Decision Rules — extract_rules","text":"treelist list decision trees. X features matrix. ntrees number (first) decision trees considered. max_depth number top levels tree considered extract conditions.","code":""},{"path":"https://github.com/fasrc/CRE/reference/extract_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract (Causal) Decision Rules — extract_rules","text":"vector (Causal) Decision Rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_causal_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Causal Rules — generate_causal_rules","title":"Generate Causal Rules — generate_causal_rules","text":"Method generating Causal Decision Rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_causal_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Causal Rules — generate_causal_rules","text":"","code":"generate_causal_rules(X, ite_std, method_params, hyper_params)"},{"path":"https://github.com/fasrc/CRE/reference/generate_causal_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Causal Rules — generate_causal_rules","text":"X covariate matrix. ite_std standardized ITE. method_params Method Parameters. hyper_params Hyper Parameters.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_causal_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Causal Rules — generate_causal_rules","text":"vector Causal Rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_cre_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate CRE Synthetic Data — generate_cre_dataset","title":"Generate CRE Synthetic Data — generate_cre_dataset","text":"Generates synthetic data continues binary outcome","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_cre_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate CRE Synthetic Data — generate_cre_dataset","text":"","code":"generate_cre_dataset(   n = 1000,   rho = 0,   n_rules = 2,   p = 10,   effect_size = 2,   binary = FALSE )"},{"path":"https://github.com/fasrc/CRE/reference/generate_cre_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate CRE Synthetic Data — generate_cre_dataset","text":"n integer number represents number observations. Non-integer values converted integer number. rho positive double number (0,1) represents correlation within covariates (default: 0). n_rules number causal rules, either 2 (default) 4. p number covariates (default: 10). effect_size effect size magnitude (default: 0.5). TODO: range effect size magnitude? binary Whether use binary continuous outcomes, either TRUE (default) FALSE.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_cre_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate CRE Synthetic Data — generate_cre_dataset","text":"list synthetic data containing outcome vector (y), treatment vector (z), matrix p covariates (X).","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_cre_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate CRE Synthetic Data — generate_cre_dataset","text":"","code":"set.seed(123) dataset <- generate_cre_dataset(n = 1000, rho = 0, n_rules = 2, p = 10,                                 effect_size = 2, binary = FALSE)"},{"path":"https://github.com/fasrc/CRE/reference/generate_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Rules — generate_rules","title":"Generate Rules — generate_rules","text":"Method generating (Causal) Decision Rules Regularization.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Rules — generate_rules","text":"","code":"generate_rules(   X,   ite_std,   ntrees_rf,   ntrees_gbm,   node_size,   max_nodes,   max_depth,   replace,   random_state )"},{"path":"https://github.com/fasrc/CRE/reference/generate_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Rules — generate_rules","text":"X covariate matrix. ite_std standardized ITE. ntrees_rf number decision trees randomForest. ntrees_gbm number decision trees gradient boosting. node_size minimum size trees' terminal nodes. max_nodes maximum number terminal nodes trees forest can . max_depth number top levels tree considered extract conditions. replace Boolean variable replacement bootstrapping. random_state integer number represents random state.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Rules — generate_rules","text":"vector causal rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_rules_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Rules Matrix — generate_rules_matrix","title":"Generate Rules Matrix — generate_rules_matrix","text":"Generates matrix causal rules given list.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_rules_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Rules Matrix — generate_rules_matrix","text":"","code":"generate_rules_matrix(X, rules_list)"},{"path":"https://github.com/fasrc/CRE/reference/generate_rules_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Rules Matrix — generate_rules_matrix","text":"X features matrix. rules_list vector causal rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/generate_rules_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Rules Matrix — generate_rules_matrix","text":"causal rules matrix.","code":""},{"path":"https://github.com/fasrc/CRE/reference/get_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Logger Settings — get_logger","title":"Get Logger Settings — get_logger","text":"Returns current logger settings.","code":""},{"path":"https://github.com/fasrc/CRE/reference/get_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Logger Settings — get_logger","text":"","code":"get_logger()"},{"path":"https://github.com/fasrc/CRE/reference/get_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Logger Settings — get_logger","text":"Returns list includes logger_file_path logger_level.","code":""},{"path":"https://github.com/fasrc/CRE/reference/get_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Logger Settings — get_logger","text":"","code":"set_logger(\"mylogger.log\", \"INFO\") log_meta <- get_logger()"},{"path":"https://github.com/fasrc/CRE/reference/interpret_select_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Select Rules — interpret_select_rules","title":"Interpret Select Rules — interpret_select_rules","text":"Replace column numbers Select Rules vector real names","code":""},{"path":"https://github.com/fasrc/CRE/reference/interpret_select_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Select Rules — interpret_select_rules","text":"","code":"interpret_select_rules(select_rules_dis, X_names)"},{"path":"https://github.com/fasrc/CRE/reference/interpret_select_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Select Rules — interpret_select_rules","text":"select_rules_dis vector select causal rules X_names real names covariates","code":""},{"path":"https://github.com/fasrc/CRE/reference/interpret_select_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Select Rules — interpret_select_rules","text":"vector select causal rules interpretable","code":""},{"path":"https://github.com/fasrc/CRE/reference/lasso_rules_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter (Causal) Decision Rules by LASSO (with stability selection) — lasso_rules_filter","title":"Filter (Causal) Decision Rules by LASSO (with stability selection) — lasso_rules_filter","text":"Selects causal rules important.","code":""},{"path":"https://github.com/fasrc/CRE/reference/lasso_rules_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter (Causal) Decision Rules by LASSO (with stability selection) — lasso_rules_filter","text":"","code":"lasso_rules_filter(   rules_matrix_std,   rules_list,   ite_std,   q,   stability_selection,   pfer_val )"},{"path":"https://github.com/fasrc/CRE/reference/lasso_rules_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter (Causal) Decision Rules by LASSO (with stability selection) — lasso_rules_filter","text":"rules_matrix_std standardized causal rules matrix. rules_list vector causal rules. ite_std standardized ITE. q Number (unique) selected rules per subsample stability selection. stability_selection Whether using stability selection select causal rules. pfer_val Per-Family Error Rate, expected number false discoveries.","code":""},{"path":"https://github.com/fasrc/CRE/reference/lasso_rules_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter (Causal) Decision Rules by LASSO (with stability selection) — lasso_rules_filter","text":"vector causal rules","code":""},{"path":"https://github.com/fasrc/CRE/reference/plot.cre.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend generic plot functions for CRE class — plot.cre","title":"Extend generic plot functions for CRE class — plot.cre","text":"wrapper function extend generic plot functions CRE class.","code":""},{"path":"https://github.com/fasrc/CRE/reference/plot.cre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend generic plot functions for CRE class — plot.cre","text":"","code":"# S3 method for cre plot(x, ...)"},{"path":"https://github.com/fasrc/CRE/reference/plot.cre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend generic plot functions for CRE class — plot.cre","text":"x CRE object. ... Additional arguments passed customize plot.","code":""},{"path":"https://github.com/fasrc/CRE/reference/plot.cre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend generic plot functions for CRE class — plot.cre","text":"Returns ggplot2 object, invisibly. function called side effects.","code":""},{"path":"https://github.com/fasrc/CRE/reference/print.cre.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend print function for the CRE object — print.cre","title":"Extend print function for the CRE object — print.cre","text":"Prints brief summary CRE object","code":""},{"path":"https://github.com/fasrc/CRE/reference/print.cre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend print function for the CRE object — print.cre","text":"","code":"# S3 method for cre print(x, ...)"},{"path":"https://github.com/fasrc/CRE/reference/print.cre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend print function for the CRE object — print.cre","text":"x CRE object running CRE function ... Additional arguments passed customize plot.","code":""},{"path":"https://github.com/fasrc/CRE/reference/print.cre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend print function for the CRE object — print.cre","text":"return value. function called side effects.","code":""},{"path":"https://github.com/fasrc/CRE/reference/prune_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune (Causal) Decision Rules — prune_rules","title":"Prune (Causal) Decision Rules — prune_rules","text":"Method pruning (Causal) Decision Rules extracted Random Forest Gradient Boosting algorithms.","code":""},{"path":"https://github.com/fasrc/CRE/reference/prune_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune (Causal) Decision Rules — prune_rules","text":"","code":"prune_rules(rules, X, ite_std, max_decay, type_decay)"},{"path":"https://github.com/fasrc/CRE/reference/prune_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune (Causal) Decision Rules — prune_rules","text":"rules list decision rules. X features matrix. ite_std standardized ITE. max_decay Decay Threshold pruning rules. type_decay Decay Type pruning rules (1: relative error; 2: error).","code":""},{"path":"https://github.com/fasrc/CRE/reference/prune_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune (Causal) Decision Rules — prune_rules","text":"list (Causal) Decision Rules.","code":""},{"path":"https://github.com/fasrc/CRE/reference/select_causal_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Causal Rules — select_causal_rules","title":"Select Causal Rules — select_causal_rules","text":"Selects causal rules important.","code":""},{"path":"https://github.com/fasrc/CRE/reference/select_causal_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Causal Rules — select_causal_rules","text":"","code":"select_causal_rules(   rules_matrix_std,   rules_list,   ite_std,   q,   stability_selection,   pfer_val )"},{"path":"https://github.com/fasrc/CRE/reference/select_causal_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Causal Rules — select_causal_rules","text":"rules_matrix_std standardized causal rules matrix. rules_list vector causal rules. ite_std standardized ITE. q selection threshold used selecting causal rules. stability_selection Whether using stability selection select causal rules. pfer_val Per-Family Error Rate, expected number false discoveries.","code":""},{"path":"https://github.com/fasrc/CRE/reference/select_causal_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Causal Rules — select_causal_rules","text":"vector causal rules","code":""},{"path":"https://github.com/fasrc/CRE/reference/set_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Logger Settings — set_logger","title":"Set Logger Settings — set_logger","text":"Updates logger settings, including log level location file.","code":""},{"path":"https://github.com/fasrc/CRE/reference/set_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Logger Settings — set_logger","text":"","code":"set_logger(logger_file_path = \"CRE.log\", logger_level = \"INFO\")"},{"path":"https://github.com/fasrc/CRE/reference/set_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Logger Settings — set_logger","text":"logger_file_path path (including file name) log messages. (Default: CRE.log) logger_level log level. Available levels include: TRACE DEBUG INFO (Default) SUCCESS WARN ERROR FATAL","code":""},{"path":"https://github.com/fasrc/CRE/reference/set_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Logger Settings — set_logger","text":"return value. function called side effects.","code":""},{"path":"https://github.com/fasrc/CRE/reference/set_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Logger Settings — set_logger","text":"","code":"set_logger(\"Debug\")"},{"path":"https://github.com/fasrc/CRE/reference/split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Data — split_data","title":"Split Data — split_data","text":"Splits data discovery inference subsamples.","code":""},{"path":"https://github.com/fasrc/CRE/reference/split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Data — split_data","text":"","code":"split_data(y, z, X, ratio_dis)"},{"path":"https://github.com/fasrc/CRE/reference/split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Data — split_data","text":"y observed response vector. z treatment vector. X features matrix. ratio_dis ratio data delegated discovery subsample","code":""},{"path":"https://github.com/fasrc/CRE/reference/split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Data — split_data","text":"list containing discovery inference subsamples","code":""},{"path":"https://github.com/fasrc/CRE/reference/standardize_rules_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Rules Matrix — standardize_rules_matrix","title":"Standardize Rules Matrix — standardize_rules_matrix","text":"Standardize matrix causal rules given list.","code":""},{"path":"https://github.com/fasrc/CRE/reference/standardize_rules_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Rules Matrix — standardize_rules_matrix","text":"","code":"standardize_rules_matrix(rules_matrix)"},{"path":"https://github.com/fasrc/CRE/reference/standardize_rules_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Rules Matrix — standardize_rules_matrix","text":"rules_matrix rules matrix.","code":""},{"path":"https://github.com/fasrc/CRE/reference/standardize_rules_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Rules Matrix — standardize_rules_matrix","text":"Standardized rules matrix","code":""},{"path":"https://github.com/fasrc/CRE/reference/summary.cre.html","id":null,"dir":"Reference","previous_headings":"","what":"Print summary of CRE object — summary.cre","title":"Print summary of CRE object — summary.cre","text":"Prints brief summary CRE object","code":""},{"path":"https://github.com/fasrc/CRE/reference/summary.cre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print summary of CRE object — summary.cre","text":"","code":"# S3 method for cre summary(object, ...)"},{"path":"https://github.com/fasrc/CRE/reference/summary.cre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print summary of CRE object — summary.cre","text":"object cre object running CRE function ... Additional arguments passed customize results.","code":""},{"path":"https://github.com/fasrc/CRE/reference/summary.cre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print summary of CRE object — summary.cre","text":"summary CRE object","code":""},{"path":"https://github.com/fasrc/CRE/reference/take1.html","id":null,"dir":"Reference","previous_headings":"","what":"Take 1 — take1","title":"Take 1 — take1","text":"Generate list indices","code":""},{"path":"https://github.com/fasrc/CRE/reference/take1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take 1 — take1","text":"","code":"take1(len)"},{"path":"https://github.com/fasrc/CRE/reference/take1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take 1 — take1","text":"len length value","code":""},{"path":"https://github.com/fasrc/CRE/reference/take1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take 1 — take1","text":"vector indices","code":""},{"path":"https://github.com/fasrc/CRE/reference/take1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take 1 — take1","text":"","code":"ind <- CRE:::take1(10)"},{"path":[]},{"path":"https://github.com/fasrc/CRE/news/index.html","id":"changed-0-1-1","dir":"Changelog","previous_headings":"","what":"Changed","title":"CRE 0.1.1 (2022-10-18)","text":"Removed value test test-estimate_ite_oreg.","code":""},{"path":"https://github.com/fasrc/CRE/news/index.html","id":"cre-010-2022-10-17","dir":"Changelog","previous_headings":"","what":"CRE 0.1.0 (2022-10-17)","title":"CRE 0.1.0 (2022-10-17)","text":"CRAN release: 2022-10-18","code":""},{"path":"https://github.com/fasrc/CRE/news/index.html","id":"changed-0-1-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"CRE 0.1.0 (2022-10-17)","text":"select_causal_rules() now lasso_rules_filter() rules generation now accepts replace parameter set replacement bootstrapping rename parameter t t_anom add parameter t_corr discard correlation threshold define discard_anomalous_rules() discard_corre_rules() functions relative tests reorganize generate_rules_matrix() (separate standardization, remove filtering) explicit prune_rules() function add relative tests remove take1() function random Rule Selection add effect modifiers filter Rule Generation add generate_causal_rules() function relative tests solve Undesired ‘’ Decision Rule Issue solve Causal Rule Selected Issue improve cre.summary() function min_nodes –> node_size (following randomForest convention) estimate_cate include five methods estimating CATE values (poisson, DRLearner, bart-baggr, cf-means, linreg) cre added new arguments (1) complement SuperLearner package (ps_method_dis, ps_method_inf, or_method_dis, or_method_inf, cate_SL_library) (2) select CATE method (3) whether filter CATE p-values (cate_method filter_cate). Now returns S3 object. estimate_ite_xyz conduct propensity score estimation using helper function SuperLearner package generate_cre_dataset make number covariates argument function improve examples update tests functions","code":""},{"path":"https://github.com/fasrc/CRE/news/index.html","id":"added-0-1-0","dir":"Changelog","previous_headings":"","what":"Added","title":"CRE 0.1.0 (2022-10-17)","text":"print summary generic functions. check_input function isolate input checks. estimate_ite_aipw function augmented inverse propensity weighting plot.cre generic function plot CRE S3 object Results test-cre_functional.R tests functionality package stability_selection function causal rules selection","code":""},{"path":"https://github.com/fasrc/CRE/news/index.html","id":"removed-0-1-0","dir":"Changelog","previous_headings":"","what":"Removed","title":"CRE 0.1.0 (2022-10-17)","text":"estimate_ite_blp function","code":""},{"path":[]},{"path":"https://github.com/fasrc/CRE/news/index.html","id":"changed-0-0-1","dir":"Changelog","previous_headings":"","what":"Changed","title":"CRE 0.0.1 (2021-10-20)","text":"estimate_cate include two methods estimating CATE values cre added initial checks binary outcome whether include propensity score ITE estimation estimate_ite_xyz conduct propensity score estimation using helper function Removed seed input generate_cre_dataset function.","code":""},{"path":"https://github.com/fasrc/CRE/news/index.html","id":"added-0-0-1","dir":"Changelog","previous_headings":"","what":"Added","title":"CRE 0.0.1 (2021-10-20)","text":"set_logger get_logger check_input_data function example generate_cre_dataset generate_cre_dataset function generate synthetic data testing package test-generate_cre_dataset function test estimate_ps function estimate propensity score estimate_ite_xbart function generate ITE estimates using accelerated BART estimate_ite_xbcf function generate ITE estimates using accelerated BCF analyze_sensitivity function conduct sensitivity analysis unmeasured confounding cre function perform entire Causal Rule Ensemble method estimate_cate function generate CATE estimates ITE estimates select rules estimate_ite function generate ITE estimates using user-specified method (calls estimate_ite_xyz functions) estimate_ite_bart function generate ITE estimates using BART estimate_ite_bcf function generate ITE estimates using Bayesian Causal Forests estimate_ite_cf function generate ITE estimates using Causal Forests estimate_ite_ipw function generate ITE estimates using IPW estimate_ite_or function generate ITE estimates using Outcome Regression estimate_ite_sipw function generate ITE estimates using SIPW extract_rules function extract list causal rules randomForest GBM models generate_rules function generate causal rule models using randomForest GBM methods generate_rules_matrix function convert list causal rules matrix select_causal_rules function apply penalized regression causal rules select important ones split_data function split input data discovery inference subsamples take1 function create subsample indices","code":""}]
