% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_rules.R
\name{generate_rules}
\alias{generate_rules}
\title{Generate Rules}
\usage{
generate_rules(
  X,
  ite_std,
  ntrees_rf,
  ntrees_gbm,
  min_nodes,
  max_nodes,
  random_state
)
}
\arguments{
\item{X}{The covariate matrix.}

\item{ite_std}{The standardized ITE.}

\item{ntrees_rf}{The number of decision trees for randomForest.}

\item{ntrees_gbm}{The number of decision trees for gradient boosting.}

\item{min_nodes}{The minimum size of the trees' terminal nodes.}

\item{max_nodes}{The maximum size of the trees' terminal nodes.}

\item{random_state}{An integer number that repesents a random state.}
}
\value{
a vector of causal rules
}
\description{
Method for generating causal rules.
}
\examples{

set.seed(213)
dataset <- generate_cre_dataset(n = 500, rho = 0, n_rules = 2, p = 10,
                                effect_size = 2, binary = FALSE)

# Initialize parameters
y <- dataset[["y"]]
z <- dataset[["z"]]
X <- as.data.frame(dataset[["X"]])
X_names <- names(as.data.frame(X))
ratio_dis <- 0.25
ite_method_dis <- "oreg"
include_ps_dis <- TRUE
ps_method_dis <- "SL.xgboost"
oreg_method_dis <- NA
ntrees_rf <- 100
ntrees_gbm <- 50
min_nodes <- 20
max_nodes <- 5
include_offset <- FALSE
offset_name <- NA
binary <- FALSE

# Split data
X <- as.matrix(X)
y <- as.matrix(y)
z <- as.matrix(z)
subgroups <- CRE:::split_data(y, z, X, ratio_dis)
discovery <- subgroups[[1]]
inference <- subgroups[[2]]

# Generate y, z, and X for discovery and inference data
y_dis <- discovery[,1]
z_dis <- discovery[,2]
X_dis <- discovery[,3:ncol(discovery)]

# Estimate ITE on Discovery Subsample

ite_list_dis <- estimate_ite(y = y_dis, z = z_dis, X = X_dis,
                             ite_method = ite_method_dis,
                             include_ps = include_ps_dis,
                             ps_method = ps_method_dis,
                             oreg_method = oreg_method_dis,
                             is_y_binary = binary,
                             X_names = X_names,
                             include_offset = include_offset,
                             offset_name = offset_name)
ite_dis <- ite_list_dis[["ite"]]
ite_std_dis <- ite_list_dis[["ite_std"]]

# Generate rules list
initial_rules_dis <- generate_rules(X_dis, ite_std_dis, ntrees_rf, ntrees_gbm,
                                    min_nodes, max_nodes, random_state = 100)

}
